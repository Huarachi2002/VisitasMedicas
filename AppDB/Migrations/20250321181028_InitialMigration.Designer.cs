// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppDB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321181028_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackendVisitaNET.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("AplicarSustituto")
                        .HasColumnType("integer");

                    b.Property<short>("CantidadCompras")
                        .HasColumnType("smallint");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("Ci")
                        .HasColumnType("text");

                    b.Property<string>("CodigoERP")
                        .HasColumnType("text");

                    b.Property<string>("CodigoPadre")
                        .HasColumnType("text");

                    b.Property<int?>("Consignacion")
                        .HasColumnType("integer");

                    b.Property<int?>("CopiaAdicionalFactura")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiasPlazo")
                        .HasColumnType("numeric");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<int?>("Facturado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaUltimaCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HashCode")
                        .HasColumnType("text");

                    b.Property<long?>("IdCliente1")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdListaPrecio")
                        .HasColumnType("bigint");

                    b.Property<long>("IdNivelC1")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdPorcentajeDescuento")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSucursal")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTabla")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoCliente")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoDocumentoSFE")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoPersona")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<string>("Materno")
                        .HasColumnType("text");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Paterno")
                        .HasColumnType("text");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("text");

                    b.Property<decimal>("SaldoDeudor")
                        .HasColumnType("numeric");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<long?>("TipoLista")
                        .HasColumnType("bigint");

                    b.Property<string>("Transaccion")
                        .HasColumnType("text");

                    b.Property<int>("Visitado")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente1");

                    b.ToTable("Cliente", "ERP");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Cliente1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Barrio")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Dias")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Especialidad1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Especialidad2")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Especialidad3")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<long>("IdRegional")
                        .HasColumnType("bigint");

                    b.Property<string>("Lote")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Manzana")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Movil")
                        .HasColumnType("text");

                    b.Property<string>("NroCasa")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ReferenciaUbicacion")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("UV")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("IdRegional");

                    b.ToTable("Cliente1", "ERP");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Empleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("AbonoPedido")
                        .HasColumnType("integer");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("CodigoERP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoPuntoVentaSin")
                        .HasColumnType("text");

                    b.Property<string>("CodigoSucursalSin")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<long?>("EmpleadoFacturador")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("IdListaPrecio")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdNivelC1")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSucursal")
                        .HasColumnType("bigint");

                    b.Property<string>("Materno")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("Origen")
                        .HasColumnType("integer");

                    b.Property<string>("Paterno")
                        .HasColumnType("text");

                    b.Property<decimal?>("PorcentajeDescuento")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReImpresion")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<int?>("ValidarUbicacion")
                        .HasColumnType("integer");

                    b.Property<int?>("VisitaProgramada")
                        .HasColumnType("integer");

                    b.Property<int?>("tracking")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Empleado", "ERP");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CodigoERP = "admin",
                            CodigoPuntoVentaSin = "-1",
                            CodigoSucursalSin = "-1",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdSucursal = 2L,
                            Nombre = "admin",
                            Origen = 0,
                            PorcentajeDescuento = 0m,
                            ReImpresion = 0,
                            ValidarUbicacion = 0,
                            VisitaProgramada = 0,
                            tracking = 0
                        });
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Regional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regional", "NIV");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nombre = "Santa Cruz"
                        },
                        new
                        {
                            Id = 2L,
                            Nombre = "La Paz"
                        },
                        new
                        {
                            Id = 3L,
                            Nombre = "Cochabamba"
                        },
                        new
                        {
                            Id = 4L,
                            Nombre = "Tarija"
                        },
                        new
                        {
                            Id = 5L,
                            Nombre = "Beni"
                        });
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Sucursal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoERP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdDepartamento")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdRegion")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdRegional")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<string>("Lugar")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Registro")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int?>("ZonaFranca")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdRegional");

                    b.ToTable("Sucursal", "GEN");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CodigoERP = "SUC",
                            Direccion = "Av. 6 de Agosto",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdDepartamento = 11042L,
                            IdEmpresa = 1L,
                            IdRegional = 1L,
                            Latitud = 0m,
                            Longitud = 0m,
                            Lugar = "Santa Cruz",
                            Nombre = "Santa Cruz",
                            Tipo = 1,
                            ZonaFranca = 0
                        },
                        new
                        {
                            Id = 2L,
                            CodigoERP = "LPZ",
                            Direccion = "Av. 6 de Agosto",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdDepartamento = 10098L,
                            IdEmpresa = 1L,
                            IdRegional = 2L,
                            Latitud = 0m,
                            Longitud = 0m,
                            Lugar = "La Paz",
                            Nombre = "La Paz",
                            Tipo = 1,
                            ZonaFranca = 0
                        },
                        new
                        {
                            Id = 3L,
                            CodigoERP = "CBB",
                            Direccion = "Av. 6 de Agosto",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdDepartamento = 10419L,
                            IdEmpresa = 1L,
                            IdRegional = 3L,
                            Latitud = 0m,
                            Longitud = 0m,
                            Lugar = "Cochabamba",
                            Nombre = "Cochabamba",
                            Tipo = 1,
                            ZonaFranca = 0
                        },
                        new
                        {
                            Id = 4L,
                            CodigoERP = "TRJ",
                            Direccion = "Av. 6 de Agosto",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdDepartamento = 10956L,
                            IdEmpresa = 1L,
                            IdRegional = 4L,
                            Latitud = 0m,
                            Longitud = 0m,
                            Lugar = "Tarija",
                            Nombre = "Tarija",
                            Tipo = 1,
                            ZonaFranca = 0
                        },
                        new
                        {
                            Id = 5L,
                            CodigoERP = "BEN",
                            Direccion = "Av. 6 de Agosto",
                            Estado = 1,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdDepartamento = 11191L,
                            IdEmpresa = 1L,
                            IdRegional = 5L,
                            Latitud = 0m,
                            Longitud = 0m,
                            Lugar = "Beni",
                            Nombre = "Beni",
                            Tipo = 1,
                            ZonaFranca = 0
                        });
                });

            modelBuilder.Entity("BackendVisitaNET.Models.TipoUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CodigoERP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario", "SIS");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Abreviatura = "SADM",
                            CodigoERP = "001",
                            Descripcion = "SuperAdministrador",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2L,
                            Abreviatura = "ADM",
                            CodigoERP = "002",
                            Descripcion = "Administrador",
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("Imei")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuario", "SIS");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Contrasena = "pmWkWSBCL51Bfkhn79xPuKBKHz//H6B+mY6G9/eieuM=",
                            Estado = 1,
                            IdEmpleado = 1L,
                            IdTipoUsuario = 1L,
                            Login = "DMS"
                        });
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Cliente", b =>
                {
                    b.HasOne("BackendVisitaNET.Models.Cliente1", "Cliente1")
                        .WithMany()
                        .HasForeignKey("IdCliente1");

                    b.Navigation("Cliente1");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Cliente1", b =>
                {
                    b.HasOne("BackendVisitaNET.Models.Regional", "Regional")
                        .WithMany()
                        .HasForeignKey("IdRegional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regional");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Empleado", b =>
                {
                    b.HasOne("BackendVisitaNET.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("IdSucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Sucursal", b =>
                {
                    b.HasOne("BackendVisitaNET.Models.Regional", "Regional")
                        .WithMany()
                        .HasForeignKey("IdRegional");

                    b.Navigation("Regional");
                });

            modelBuilder.Entity("BackendVisitaNET.Models.Usuario", b =>
                {
                    b.HasOne("BackendVisitaNET.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendVisitaNET.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario");

                    b.Navigation("Empleado");

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
